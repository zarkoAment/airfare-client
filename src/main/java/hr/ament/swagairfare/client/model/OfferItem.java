/*
 * Flight Low-fare Search
 * # Introduction  The Flight Low-fare Search REST/JSON API is a traditional flight search API that enables you to find the best flight offers that match your search (one-way and round-trip) from a wide choice of airlines.  The result contains the flight details and will allow the user to select their preferred option based on either price or convenience. A wide range of search criteria can be applied to narrow the search results.  # Authorization  Before using the API you will need to get an access token. Please read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization)** for more information on how to get your token.  # Supported Operations  Resource: flight-offers  HTTP method: GET
 *
 * OpenAPI spec version: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package hr.ament.swagairfare.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import hr.ament.swagairfare.client.model.Price;
import hr.ament.swagairfare.client.model.Service;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * OfferItem
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-10-18T23:02:34.311+02:00")
public class OfferItem {
  @JsonProperty("services")
  private List<Service> services = null;

  @JsonProperty("price")
  private Price price = null;

  @JsonProperty("pricePerAdult")
  private Price pricePerAdult = null;

  @JsonProperty("pricePerInfant")
  private Price pricePerInfant = null;

  @JsonProperty("pricePerChild")
  private Price pricePerChild = null;

  @JsonProperty("pricePerSenior")
  private Price pricePerSenior = null;

  public OfferItem services(List<Service> services) {
    this.services = services;
    return this;
  }

  public OfferItem addServicesItem(Service servicesItem) {
    if (this.services == null) {
      this.services = new ArrayList<Service>();
    }
    this.services.add(servicesItem);
    return this;
  }

   /**
   * Get services
   * @return services
  **/
  @ApiModelProperty(value = "")
  public List<Service> getServices() {
    return services;
  }

  public void setServices(List<Service> services) {
    this.services = services;
  }

  public OfferItem price(Price price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @ApiModelProperty(value = "")
  public Price getPrice() {
    return price;
  }

  public void setPrice(Price price) {
    this.price = price;
  }

  public OfferItem pricePerAdult(Price pricePerAdult) {
    this.pricePerAdult = pricePerAdult;
    return this;
  }

   /**
   * Get pricePerAdult
   * @return pricePerAdult
  **/
  @ApiModelProperty(value = "")
  public Price getPricePerAdult() {
    return pricePerAdult;
  }

  public void setPricePerAdult(Price pricePerAdult) {
    this.pricePerAdult = pricePerAdult;
  }

  public OfferItem pricePerInfant(Price pricePerInfant) {
    this.pricePerInfant = pricePerInfant;
    return this;
  }

   /**
   * Get pricePerInfant
   * @return pricePerInfant
  **/
  @ApiModelProperty(value = "")
  public Price getPricePerInfant() {
    return pricePerInfant;
  }

  public void setPricePerInfant(Price pricePerInfant) {
    this.pricePerInfant = pricePerInfant;
  }

  public OfferItem pricePerChild(Price pricePerChild) {
    this.pricePerChild = pricePerChild;
    return this;
  }

   /**
   * Get pricePerChild
   * @return pricePerChild
  **/
  @ApiModelProperty(value = "")
  public Price getPricePerChild() {
    return pricePerChild;
  }

  public void setPricePerChild(Price pricePerChild) {
    this.pricePerChild = pricePerChild;
  }

  public OfferItem pricePerSenior(Price pricePerSenior) {
    this.pricePerSenior = pricePerSenior;
    return this;
  }

   /**
   * Get pricePerSenior
   * @return pricePerSenior
  **/
  @ApiModelProperty(value = "")
  public Price getPricePerSenior() {
    return pricePerSenior;
  }

  public void setPricePerSenior(Price pricePerSenior) {
    this.pricePerSenior = pricePerSenior;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OfferItem offerItem = (OfferItem) o;
    return Objects.equals(this.services, offerItem.services) &&
        Objects.equals(this.price, offerItem.price) &&
        Objects.equals(this.pricePerAdult, offerItem.pricePerAdult) &&
        Objects.equals(this.pricePerInfant, offerItem.pricePerInfant) &&
        Objects.equals(this.pricePerChild, offerItem.pricePerChild) &&
        Objects.equals(this.pricePerSenior, offerItem.pricePerSenior);
  }

  @Override
  public int hashCode() {
    return Objects.hash(services, price, pricePerAdult, pricePerInfant, pricePerChild, pricePerSenior);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OfferItem {\n");
    
    sb.append("    services: ").append(toIndentedString(services)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    pricePerAdult: ").append(toIndentedString(pricePerAdult)).append("\n");
    sb.append("    pricePerInfant: ").append(toIndentedString(pricePerInfant)).append("\n");
    sb.append("    pricePerChild: ").append(toIndentedString(pricePerChild)).append("\n");
    sb.append("    pricePerSenior: ").append(toIndentedString(pricePerSenior)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

