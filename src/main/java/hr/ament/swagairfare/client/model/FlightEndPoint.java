/*
 * Flight Low-fare Search
 * # Introduction  The Flight Low-fare Search REST/JSON API is a traditional flight search API that enables you to find the best flight offers that match your search (one-way and round-trip) from a wide choice of airlines.  The result contains the flight details and will allow the user to select their preferred option based on either price or convenience. A wide range of search criteria can be applied to narrow the search results.  # Authorization  Before using the API you will need to get an access token. Please read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization)** for more information on how to get your token.  # Supported Operations  Resource: flight-offers  HTTP method: GET
 *
 * OpenAPI spec version: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package hr.ament.swagairfare.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

/**
 * departure or arrival information
 */
@ApiModel(description = "departure or arrival information")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-10-18T23:02:34.311+02:00")
public class FlightEndPoint {
  @JsonProperty("iataCode")
  private String iataCode = null;

  @JsonProperty("terminal")
  private String terminal = null;

  @JsonProperty("at")
  private OffsetDateTime at = null;

  public FlightEndPoint iataCode(String iataCode) {
    this.iataCode = iataCode;
    return this;
  }

   /**
   * [IATA airline codes](http://www.iata.org/publications/Pages/code-search.aspx)
   * @return iataCode
  **/
  @ApiModelProperty(example = "JFK", value = "[IATA airline codes](http://www.iata.org/publications/Pages/code-search.aspx)")
  public String getIataCode() {
    return iataCode;
  }

  public void setIataCode(String iataCode) {
    this.iataCode = iataCode;
  }

  public FlightEndPoint terminal(String terminal) {
    this.terminal = terminal;
    return this;
  }

   /**
   * terminal name / number
   * @return terminal
  **/
  @ApiModelProperty(example = "T2", value = "terminal name / number")
  public String getTerminal() {
    return terminal;
  }

  public void setTerminal(String terminal) {
    this.terminal = terminal;
  }

  public FlightEndPoint at(OffsetDateTime at) {
    this.at = at;
    return this;
  }

   /**
   * local date and time in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) YYYY-MM-ddThh:mm±hh:mm format, e.g. 2017-02-10T20:40:00+02:00
   * @return at
  **/
  @ApiModelProperty(example = "2017-10-23T20:00:00+02:00", value = "local date and time in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) YYYY-MM-ddThh:mm±hh:mm format, e.g. 2017-02-10T20:40:00+02:00")
  public OffsetDateTime getAt() {
    return at;
  }

  public void setAt(OffsetDateTime at) {
    this.at = at;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlightEndPoint flightEndPoint = (FlightEndPoint) o;
    return Objects.equals(this.iataCode, flightEndPoint.iataCode) &&
        Objects.equals(this.terminal, flightEndPoint.terminal) &&
        Objects.equals(this.at, flightEndPoint.at);
  }

  @Override
  public int hashCode() {
    return Objects.hash(iataCode, terminal, at);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlightEndPoint {\n");
    
    sb.append("    iataCode: ").append(toIndentedString(iataCode)).append("\n");
    sb.append("    terminal: ").append(toIndentedString(terminal)).append("\n");
    sb.append("    at: ").append(toIndentedString(at)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

